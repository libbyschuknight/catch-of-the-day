{"version":3,"sources":["helpers.js","components/StorePicker.js","components/Header.js","components/Order.js","components/AddFishForm.js","components/EditFishForm.js","components/Login.js","base.js","components/Inventory.js","sample-fishes.js","components/Fish.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","concat","StorePicker","myInput","React","createRef","goToStore","event","preventDefault","storeName","_this","current","value","props","history","push","react_default","a","createElement","className","onSubmit","this","type","ref","required","placeholder","defaultValue","Component","Header","tagline","Order","renderOrder","key","fish","fishes","count","order","isAvailable","status","transitionOptions","classNames","timeout","enter","exit","react_transition_group","component","name","price","onClick","removeFromOrder","_this2","orderIds","Object","keys","total","reduce","prevTotal","map","AddFishForm","nameRef","priceRef","statusRef","descRef","imageRef","createFish","parseFloat","addFish","currentTarget","reset","EditFishForm","handleChange","updatedFish","objectSpread","defineProperty","updateFish","index","onChange","desc","image","deleteFish","Login","authenticate","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","Inventory","state","uid","owner","authHandler","_callee","authData","store","regenerator_default","wrap","_context","prev","next","fetch","storeId","context","assertThisInitialized","sent","console","log","post","data","user","setState","stop","provider","authProvider","auth","signInWithPopup","then","logout","_callee2","_context2","signOut","onAuthStateChanged","_this3","components_EditFishForm","components_AddFishForm","loadSampleFishes","components_Login","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","Fish","_this$props$details","details","src","alt","disabled","addToOrder","App","Date","now","sampleFishes","params","match","localStorageRef","localStorage","getItem","JSON","parse","syncState","setItem","stringify","removeBinding","components_Header","components_Fish","components_Order","components_Inventory","NotFound","Router","BrowserRouter","Switch","Route","exact","path","render","components_Router","document","querySelector"],"mappings":"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","file":"static/js/main.c154c5b1.chunk.js","sourcesContent":["export function formatPrice(cents) {\n  return (cents / 100).toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\")\n    .replace(/[^\\w-]+/g, \"\")\n    .replace(/--+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\");\n}\n\nexport function getFunName() {\n  const adjectives = [\n    \"adorable\",\n    \"beautiful\",\n    \"clean\",\n    \"drab\",\n    \"elegant\",\n    \"fancy\",\n    \"glamorous\",\n    \"handsome\",\n    \"long\",\n    \"magnificent\",\n    \"old-fashioned\",\n    \"plain\",\n    \"quaint\",\n    \"sparkling\",\n    \"ugliest\",\n    \"unsightly\",\n    \"angry\",\n    \"bewildered\",\n    \"clumsy\",\n    \"defeated\",\n    \"embarrassed\",\n    \"fierce\",\n    \"grumpy\",\n    \"helpless\",\n    \"itchy\",\n    \"jealous\",\n    \"lazy\",\n    \"mysterious\",\n    \"nervous\",\n    \"obnoxious\",\n    \"panicky\",\n    \"repulsive\",\n    \"scary\",\n    \"thoughtless\",\n    \"uptight\",\n    \"worried\"\n  ];\n\n  const nouns = [\n    \"women\",\n    \"men\",\n    \"children\",\n    \"teeth\",\n    \"feet\",\n    \"people\",\n    \"leaves\",\n    \"mice\",\n    \"geese\",\n    \"halves\",\n    \"knives\",\n    \"wives\",\n    \"lives\",\n    \"elves\",\n    \"loaves\",\n    \"potatoes\",\n    \"tomatoes\",\n    \"cacti\",\n    \"foci\",\n    \"fungi\",\n    \"nuclei\",\n    \"syllabuses\",\n    \"analyses\",\n    \"diagnoses\",\n    \"oases\",\n    \"theses\",\n    \"crises\",\n    \"phenomena\",\n    \"criteria\",\n    \"data\"\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getFunName } from '../helpers';\n\nclass StorePicker extends React.Component {\n  static propTypes = {\n    history: PropTypes.object\n  };\n  myInput = React.createRef();\n\n  goToStore = event => {\n    event.preventDefault();\n    const storeName = this.myInput.current.value;\n    this.props.history.push(`/store/${storeName}`);\n  };\n\n  render() {\n    return (\n      <form className=\"store-selector\" onSubmit={this.goToStore}>\n        <h2>Please Enter A Store</h2>\n        <input\n          type=\"text\"\n          ref={this.myInput}\n          required\n          placeholder=\"Store Name\"\n          defaultValue={getFunName()}\n        />\n        <button type=\"submit\">Visit Store -></button>\n      </form>\n    );\n  }\n}\n\nexport default StorePicker;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Header = props => (\n  <header className=\"top\">\n    <h1>\n      Catch\n      <span className=\"ofThe\">\n        <span className=\"of\">Of</span>\n        <span className=\"the\">The</span>\n      </span>\n      Day\n    </h1>\n    <h3 className=\"tagline\">\n      <span>{props.tagline}</span>\n    </h3>\n  </header>\n);\n\nHeader.propTypes = {\n  tagline: PropTypes.string.isRequired\n};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { formatPrice } from '../helpers';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\n\nclass Order extends React.Component {\n  static propTypes = {\n    fishes: PropTypes.object,\n    order: PropTypes.object,\n    removeFromOrder: PropTypes.func\n  };\n\n  renderOrder = key => {\n    const fish = this.props.fishes[key];\n    const count = this.props.order[key];\n    const isAvailable = fish && fish.status === 'available';\n    const transitionOptions = {\n      classNames: 'order',\n      key,\n      timeout: { enter: 500, exit: 500 }\n    };\n\n    // make sure the fish is loaded before we continue\n    if (!fish) return null;\n\n    if (!isAvailable) {\n      return (\n        <CSSTransition {...transitionOptions}>\n          <li key={key}>\n            Sorry {fish ? fish.name : 'fish'} is no longer available\n          </li>\n        </CSSTransition>\n      );\n    }\n\n    return (\n      <CSSTransition {...transitionOptions}>\n        <li key={key}>\n          <span>\n            <TransitionGroup component=\"span\" className=\"count\">\n              <CSSTransition\n                classNames=\"count\"\n                key={count}\n                timeout={{ enter: 500, exit: 500 }}\n              >\n                <span>{count}</span>\n              </CSSTransition>\n            </TransitionGroup>\n            lbs {fish.name}\n            {formatPrice(count * fish.price)}\n            <button onClick={() => this.props.removeFromOrder(key)}>\n              &times;\n            </button>\n          </span>\n        </li>\n      </CSSTransition>\n    );\n  };\n\n  render() {\n    const orderIds = Object.keys(this.props.order);\n    const total = orderIds.reduce((prevTotal, key) => {\n      const fish = this.props.fishes[key];\n      const count = this.props.order[key];\n      const isAvailable = fish && fish.status === 'available';\n      if (isAvailable) {\n        return prevTotal + count * fish.price;\n      }\n      return prevTotal;\n    }, 0);\n    return (\n      <div className=\"order-wrap\">\n        <h2>Order</h2>\n        <TransitionGroup component=\"ul\" className=\"order\">\n          {orderIds.map(this.renderOrder)}\n        </TransitionGroup>\n        <div className=\"total\">\n          Total\n          <strong>{formatPrice(total)}</strong>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Order;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass AddFishForm extends React.Component {\n  nameRef = React.createRef();\n  priceRef = React.createRef();\n  statusRef = React.createRef();\n  descRef = React.createRef();\n  imageRef = React.createRef();\n\n  static propTypes = {\n    addFish: PropTypes.func\n  };\n\n  createFish = event => {\n    // 1. stop the form from submitting\n    event.preventDefault();\n    const fish = {\n      nameRef: this.nameRef.current.value,\n      priceRef: parseFloat(this.priceRef.current.value),\n      statusRef: this.statusRef.current.value,\n      descRef: this.descRef.current.value,\n      imageRef: this.imageRef.current.value\n    };\n    this.props.addFish(fish);\n    // refresh the form\n    event.currentTarget.reset();\n  };\n\n  render() {\n    return (\n      <form className=\"fish-edit\" onSubmit={this.createFish}>\n        <input name=\"name\" ref={this.nameRef} type=\"text\" placeholder=\"Name\" />\n\n        <input\n          name=\"price\"\n          ref={this.priceRef}\n          type=\"text\"\n          placeholder=\"Price\"\n        />\n        <select name=\"status\" ref={this.statusRef}>\n          <option value=\"available\">Fresh!</option>\n          <option value=\"unavailable\">Sold out!</option>\n        </select>\n\n        <textarea name=\"desc\" ref={this.descRef} placeholder=\"Desc\" />\n\n        <input\n          name=\"image\"\n          ref={this.imageRef}\n          type=\"text\"\n          placeholder=\"Image\"\n        />\n\n        <button type=\"submit\">+ Add Fish</button>\n      </form>\n    );\n  }\n}\n\nexport default AddFishForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass EditFishForm extends React.Component {\n  static propTypes = {\n    // fish: PropTypes.instanceOf(Fish)\n    fish: PropTypes.shape({\n      name: PropTypes.string,\n      price: PropTypes.number,\n      status: PropTypes.string,\n      desc: PropTypes.string,\n      image: PropTypes.string\n    }),\n    index: PropTypes.string,\n    updateFish: PropTypes.func,\n    deleteFish: PropTypes.func\n  };\n  handleChange = event => {\n    // update the fish\n    const updatedFish = {\n      ...this.props.fish,\n      [event.currentTarget.name]: event.currentTarget.value\n    };\n    this.props.updateFish(this.props.index, updatedFish);\n  };\n\n  render() {\n    return (\n      <div className=\"fish-edit\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          onChange={this.handleChange}\n          value={this.props.fish.name}\n        />\n        <input\n          type=\"text\"\n          name=\"price\"\n          onChange={this.handleChange}\n          value={this.props.fish.price}\n        />\n        <select\n          type=\"text\"\n          name=\"status\"\n          onChange={this.handleChange}\n          value={this.props.fish.status}\n        >\n          <option value=\"available\">Fresh!</option>\n          <option value=\"unavailable\">Sold out!</option>\n        </select>\n        <textarea\n          name=\"desc\"\n          onChange={this.handleChange}\n          value={this.props.fish.desc}\n        />\n        <input\n          type=\"text\"\n          name=\"image\"\n          onChange={this.handleChange}\n          value={this.props.fish.image}\n        />\n        <button onClick={() => this.props.deleteFish(this.props.index)}>\n          Remove Fish\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default EditFishForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Login = props => (\n  <nav className=\"login\">\n    <h2>Inventory Login</h2>\n    <p>Sign into manage your store's inventory</p>\n    <button className=\"github\" onClick={() => props.authenticate('Github')}>\n      Login with Github\n    </button>\n    <button className=\"facebook\" onClick={() => props.authenticate('Facebook')}>\n      Login with Facebook\n    </button>\n    <button className=\"twitter\" onClick={() => props.authenticate('Twitter')}>\n      Login with Twitter\n    </button>\n  </nav>\n);\n\nLogin.propTypes = {\n  authenticate: PropTypes.func.isRequired\n};\n\nexport default Login;\n","import Rebase from 're-base'; // React firebase package\nimport firebase from 'firebase';\n\nconst firebaseApp = firebase.initializeApp({\n  apiKey: 'AIzaSyCj81QkSBwX7jnDnh62615brLchE5KKWkY',\n  authDomain: 'catch-of-the-day-libby.firebaseapp.com',\n  databaseURL: 'https://catch-of-the-day-libby.firebaseio.com'\n  // projectId: 'catch-of-the-day-libby',\n  // storageBucket: 'catch-of-the-day-libby.appspot.com',\n  // messagingSenderId: '757379024500',\n  // appId: '1:757379024500:web:9f64bcc3a3f3d5c2'\n});\n\nconst base = Rebase.createClass(firebase.database());\n\n// this is a named export\nexport { firebaseApp };\n\n// this is a default export\n\nexport default base;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport firebase from 'firebase/app';\nimport AddFishForm from './AddFishForm';\nimport EditFishForm from './EditFishForm';\nimport Login from './Login';\nimport base, { firebaseApp } from '../base';\n\nclass Inventory extends React.Component {\n  static propTypes = {\n    fishes: PropTypes.object,\n    updateFish: PropTypes.func,\n    deleteFish: PropTypes.func,\n    addFish: PropTypes.func,\n    loadSampleFishes: PropTypes.func\n  };\n\n  state = {\n    uid: null,\n    owner: null\n  };\n\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        this.authHandler({ user });\n      }\n    });\n  }\n\n  authHandler = async authData => {\n    // 1. look up current store in firebase database\n    const store = await base.fetch(this.props.storeId, { context: this });\n    console.log(store);\n\n    // 2. claim it if there is no owner\n    if (!store.owner) {\n      // save it as our own\n      await base.post(`${this.props.storeId}/owner`, {\n        data: authData.user.uid\n      });\n    }\n\n    // 3. set the state of the inventory component to reflect the user\n    this.setState({\n      uid: authData.user.uid,\n      owner: store.owner || authData.user.uid\n    });\n  };\n\n  authenticate = provider => {\n    const authProvider = new firebase.auth[`${provider}AuthProvider`]();\n    firebaseApp\n      .auth()\n      .signInWithPopup(authProvider)\n      .then(this.authHandler);\n  };\n\n  logout = async () => {\n    console.log('Logging out!!');\n    await firebase.auth().signOut();\n    this.setState({ uid: null });\n  };\n\n  render() {\n    // logout button\n    const logout = <button onClick={this.logout}>Log Out!</button>;\n\n    // check if they are logged in\n    if (!this.state.uid) {\n      return <Login authenticate={this.authenticate} />;\n    }\n\n    // check if they are not the owner of the store\n    if (this.state.uid !== this.state.owner) {\n      return (\n        <div>\n          <p>Sorry you are not the owner!</p>\n          {logout}\n        </div>\n      );\n    }\n\n    // they must be the owner, just render the inventory\n    return (\n      <div className=\"inventory\">\n        <h2>Inventory</h2>\n        {logout}\n        {Object.keys(this.props.fishes).map(key => (\n          <EditFishForm\n            key={key}\n            index={key}\n            fish={this.props.fishes[key]}\n            updateFish={this.props.updateFish}\n            deleteFish={this.props.deleteFish}\n          />\n        ))}\n        <AddFishForm addFish={this.props.addFish} />\n        <button onClick={this.props.loadSampleFishes}>\n          Load Sample Fishes\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Inventory;\n","// This is just some sample data so you don't have to think of your own!\nconst fishes = {\n  fish1: {\n    name: \"Pacific Halibut\",\n    image: \"/images/hali.jpg\",\n    desc:\n      \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\n    price: 1724,\n    status: \"available\"\n  },\n\n  fish2: {\n    name: \"Lobster\",\n    image: \"/images/lobster.jpg\",\n    desc:\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\n    price: 3200,\n    status: \"available\"\n  },\n\n  fish3: {\n    name: \"Sea Scallops\",\n    image: \"/images/scallops.jpg\",\n    desc:\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\n    price: 1684,\n    status: \"unavailable\"\n  },\n\n  fish4: {\n    name: \"Mahi Mahi\",\n    image: \"/images/mahi.jpg\",\n    desc:\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\n    price: 1129,\n    status: \"available\"\n  },\n\n  fish5: {\n    name: \"King Crab\",\n    image: \"/images/crab.jpg\",\n    desc:\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\n    price: 4234,\n    status: \"available\"\n  },\n\n  fish6: {\n    name: \"Atlantic Salmon\",\n    image: \"/images/salmon.jpg\",\n    desc:\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\n    price: 1453,\n    status: \"available\"\n  },\n\n  fish7: {\n    name: \"Oysters\",\n    image: \"/images/oysters.jpg\",\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\n    price: 2543,\n    status: \"available\"\n  },\n\n  fish8: {\n    name: \"Mussels\",\n    image: \"/images/mussels.jpg\",\n    desc:\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\n    price: 425,\n    status: \"available\"\n  },\n\n  fish9: {\n    name: \"Jumbo Prawns\",\n    image: \"/images/prawns.jpg\",\n    desc:\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\n    price: 2250,\n    status: \"available\"\n  }\n};\n\nexport default fishes;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { formatPrice } from '../helpers';\n\nclass Fish extends React.Component {\n  static propTypes = {\n    details: PropTypes.shape({\n      image: PropTypes.string,\n      name: PropTypes.string,\n      desc: PropTypes.string,\n      status: PropTypes.string,\n      price: PropTypes.number\n    }),\n    addToOrder: PropTypes.func\n  };\n\n  render() {\n    const { image, name, price, desc, status } = this.props.details;\n    const isAvailable = status === 'available';\n    return (\n      <li className=\"menu-fish\">\n        <img src={image} alt={name} />\n        <h3 className=\"fish-name\">\n          {name}\n          <span className=\"price\">{formatPrice(price)}</span>\n        </h3>\n        <p>{desc}</p>\n        <button\n          disabled={!isAvailable}\n          onClick={() => this.props.addToOrder(this.props.index)}\n        >\n          {isAvailable ? 'Add To Order' : 'Sold Out'}\n        </button>\n      </li>\n    );\n  }\n}\n\nexport default Fish;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Header from './Header';\nimport Order from './Order';\nimport Inventory from './Inventory';\nimport sampleFishes from '../sample-fishes';\nimport Fish from './Fish';\nimport base from '../base';\n\nclass App extends React.Component {\n  // state at the top\n  state = {\n    fishes: {},\n    order: {}\n  };\n\n  static propTypes = {\n    match: PropTypes.object\n  };\n\n  // lifecycle events\n  componentDidMount() {\n    const { params } = this.props.match;\n    // first reinstate our localStorage\n    const localStorageRef = localStorage.getItem(params.storeId);\n    if (localStorageRef) {\n      this.setState({ order: JSON.parse(localStorageRef) });\n    }\n    this.ref = base.syncState(`${params.storeId}/fishes`, {\n      context: this,\n      state: 'fishes'\n    });\n  }\n\n  componentDidUpdate() {\n    localStorage.setItem(\n      this.props.match.params.storeId,\n      JSON.stringify(this.state.order)\n    );\n  }\n\n  componentWillUnmount() {\n    base.removeBinding(this.ref);\n  }\n\n  // custom stuff\n  addFish = fish => {\n    // 1. take a copy of existing state (state should be immutable)\n    const fishes = { ...this.state.fishes };\n\n    // 2. add our new fish to fishes var\n    fishes[`fish${Date.now()}`] = fish;\n\n    // 3. set the new fishes object to state\n    this.setState({ fishes });\n  };\n\n  updateFish = (key, updatedFish) => {\n    // 1 take a copy of the current state\n\n    const fishes = { ...this.state.fishes };\n    // 2 update that state\n    fishes[key] = updatedFish;\n\n    // 3 set that to state\n    this.setState({ fishes });\n  };\n\n  deleteFish = key => {\n    // 1. take a copy of state\n    const fishes = { ...this.state.fishes };\n\n    // 2. update the state\n    fishes[key] = null;\n\n    // 3. set the state\n    this.setState({ fishes });\n  };\n\n  loadSampleFishes = () => {\n    this.setState({ fishes: sampleFishes });\n  };\n\n  addToOrder = key => {\n    // take copy of state\n    const order = { ...this.state.order };\n\n    // either add to the order or update the number in our order\n    order[key] = order[key] + 1 || 1;\n\n    // call setState to update our state object\n    this.setState({ order });\n  };\n\n  removeFromOrder = key => {\n    // take a copy of state\n    const order = { ...this.state.order };\n\n    // remove item from order\n    // my attempt\n    // this moves a fish at a time, down to 0\n    // if (order[key] === 0) {\n    //   return (order[key] = 0);\n    // } else {\n    //   order[key] = order[key] - 1;\n    // }\n\n    // wes bos's way\n    // removes all of this fish\n    delete order[key];\n\n    // set the state\n    this.setState({ order });\n  };\n\n  // finally render method\n  render() {\n    return (\n      <div className=\"catch-of-the-day\">\n        <div className=\"menu\">\n          <Header tagline=\"Fresh Seafood Market\" />\n          <ul className=\"fishes\">\n            {Object.keys(this.state.fishes).map(key => (\n              <Fish\n                key={key}\n                index={key}\n                details={this.state.fishes[key]}\n                addToOrder={this.addToOrder}\n              />\n            ))}\n          </ul>\n        </div>\n        <Order\n          fishes={this.state.fishes}\n          order={this.state.order}\n          deleteFish={this.deleteFish}\n          removeFromOrder={this.removeFromOrder}\n        />\n        <Inventory\n          addFish={this.addFish}\n          updateFish={this.updateFish}\n          deleteFish={this.deleteFish}\n          loadSampleFishes={this.loadSampleFishes}\n          fishes={this.state.fishes}\n          storeId={this.props.match.params.storeId}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\n\nconst NotFound = () => (\n  <div>\n    <h2>Not Found!! 404!!</h2>\n  </div>\n);\n\nexport default NotFound;\n","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport StorePicker from './StorePicker';\nimport App from './App';\nimport NotFound from './NotFound';\n\nconst Router = () => (\n  <BrowserRouter>\n    <Switch>\n      <Route exact path=\"/\" component={StorePicker} />\n      <Route exact path=\"/store/:storeId\" component={App} />\n      <Route exact component={NotFound} />\n    </Switch>\n  </BrowserRouter>\n);\n\nexport default Router;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport Router from './components/Router';\nimport './css/style.css';\n\nrender(<Router />, document.querySelector('#main'));\n"],"sourceRoot":""}